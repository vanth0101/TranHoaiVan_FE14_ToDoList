{"version":3,"sources":["components/Input.js","components/Task.js","App.js","reportWebVitals.js","index.js"],"names":["Input","handleChange","e","key","setState","value","target","state","saveClick","this","props","type","placeholder","onChange","onClick","index","React","Component","Todo","event","isEditing","getdata","editClick","name","content","status","App","data","taskUpdate","task","inputElement","createRef","className","map","item","Task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA0BeA,G,8DAvBb,aAAe,IAAD,8BACZ,gBAMFC,aAAe,SAACC,EAAEC,GAChB,EAAKC,SAAS,CAACC,MAAMH,EAAEI,OAAOD,SAN9B,EAAKE,MAAQ,CACXF,MAAM,IAHI,E,qDAWJ,IAAD,OACDG,EAAYC,KAAKC,MAAMF,UAC7B,OACE,gCACE,uBAAOG,KAAK,OAAOC,YAAaH,KAAKC,MAAML,MAAOQ,SAAUJ,KAAKR,eACjE,sBAAMa,QAAS,WAAQN,EAAU,EAAKD,MAAMF,MAAM,EAAKK,MAAMK,QAA7D,yB,GAjBYC,IAAMC,YCoCXC,E,kDAjCb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAQRF,UAAY,SAACW,EAAOhB,GAClB,EAAKC,SAAS,CAAEgB,WAAW,IAC3B,EAAKV,MAAMW,QAAQF,EAAMhB,IAXR,EAcnBmB,UAAY,WACV,EAAKlB,SAAS,CAAEgB,WAAW,KAb3B,EAAKb,MAAQ,CACXa,WAAW,EACXf,MAAM,EAAKK,MAAMa,MAJF,E,qDAkBjB,OACE,+BACE,gCACE,mCAAMd,KAAKF,MAAMa,UAAY,cAAC,EAAD,CAAWZ,UAAWC,KAAKD,UAAWH,MAAOI,KAAKC,MAAMa,KAAMR,MAAON,KAAKC,MAAMK,QAAW,sBAAMD,QAASL,KAAKa,UAApB,SAAkCb,KAAKC,MAAMa,UACrK,mCAAMd,KAAKC,MAAMc,cAEnB,8BACE,4BAAIf,KAAKC,MAAMe,kB,GA1BNT,IAAMC,WC+CVS,E,kDA9Cb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAuBRW,QAAU,SAACM,EAAMxB,GACf,IAAIyB,EAAU,YAAO,EAAKrB,MAAMsB,MAChCD,EAAWzB,GAAKoB,KAAOI,EACvB,EAAKvB,SAAS,CAAEyB,KAAMD,KAzBtB,EAAKE,aAAed,IAAMe,YAC1B,EAAKxB,MAAQ,CACXsB,KAAM,CACJ,CACE,KAAQ,OACR,QAAW,eACX,OAAS,YAEX,CACE,KAAQ,SACR,QAAW,oBACX,OAAS,WAEX,CACE,KAAQ,QACR,QAAW,kBACX,OAAS,YAlBE,E,qDA8BT,IAAD,OACP,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACI,4CACF,qBAAKA,UAAU,OAAf,SACI,6BACCvB,KAAKF,MAAMsB,KAAKI,KAAI,SAACC,EAAMnB,GAAP,OAAiB,wBAACoB,EAAD,2BAAUD,GAAV,IAAgBb,QAAS,EAAKA,QAASlB,IAAKY,EAAOA,MAAOA,qB,GAtC5FC,IAAMC,WCQTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79034a9b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Input extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value:''\r\n    }\r\n  }\r\n\r\n  handleChange = (e,key) =>{\r\n    this.setState({value:e.target.value})\r\n  }\r\n \r\n  render() {\r\n    const saveClick = this.props.saveClick;\r\n    return (\r\n      <div>\r\n        <input type=\"text\" placeholder={this.props.value} onChange={this.handleChange}></input>\r\n        <span onClick={() => { saveClick(this.state.value,this.props.index) }}>Save</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Input;\r\n","import './Todo.css';\r\nimport React from 'react';\r\nimport Inputtext from './Input';\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      value:this.props.name\r\n    }\r\n  }\r\n\r\n\r\n  saveClick = (event, key) => {\r\n    this.setState({ isEditing: false });\r\n    this.props.getdata(event,key);\r\n  }\r\n\r\n  editClick = () => {\r\n    this.setState({ isEditing: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <li>\r\n        <div>\r\n          <h3> {this.state.isEditing ? <Inputtext saveClick={this.saveClick} value={this.props.name} index={this.props.index}/> : <span onClick={this.editClick} >{ this.props.name }</span>}</h3>\r\n          <h4> {this.props.content}</h4>\r\n        </div>\r\n        <div>\r\n          <p>{this.props.status}</p>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Todo;\r\n","import './App.css';\nimport React from 'react';\nimport Task from './components/Task';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputElement = React.createRef();\n    this.state = {\n      task: [\n        {\n          'name': 'GAME',\n          'content': 'Call of Duty',\n          'status':'Finished'\n        },\n        {\n          'name': 'SOCCER',\n          'content': 'Manchester United',\n          'status':'Pending'\n        },\n        {\n          'name': 'COMIC',\n          'content': 'Attack on Titan',\n          'status':'Cancel'\n        },\n      ]\n    }\n  }\n\n  getdata = (data, key) => {\n    let taskUpdate = [...this.state.task];\n    taskUpdate[key].name = data;\n    this.setState({ task: taskUpdate });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <h2>TO DO LIST</h2>\n          <div className=\"main\">\n              <ul>\n              {this.state.task.map((item, index) => <Task {...item} getdata={this.getdata} key={index} index={index}/>)}\n              </ul>\n           </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//name={item.name} content={item.content}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}